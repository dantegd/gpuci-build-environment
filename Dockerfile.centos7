# This file was generated! Edits made directly to this file may be lost.
#
ARG CUDA_VERSION=10.0
ARG CUDA_SHORT_VERSION=${CUDA_VERSION}
ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}
ARG LINUX_VERSION=centos7
FROM nvidia/cuda:${CUDA_VERSION}-devel-${LINUX_VERSION}

ARG CUDA_SHORT_VERSION
ARG CUDA_MAJORMINOR_VERSION

ARG CC_VERSION=7
ARG CXX_VERSION=7
ARG CFFI_VERSION=1.11.5
ARG CMAKE_VERSION=3.12.4
ARG CYTHON_VERSION=0.29.*
ARG DASK_VERSION=1.1.1
ARG DISTRIBUTED_VERSION=1.25.3
ARG FAISSGPU_VERSION=1.5.0
ARG HASH_JOIN=ON
ARG IPYTHON_VERSION=7.3*
ARG LIBGCC_NG_VERSION=7.3.0
ARG LIBGFORTRAN_NG_VERSION=7.3.0
ARG LIBSTDCXX_NG_VERSION=7.3.0
ARG CONDA_VERSION=4.6.14
ARG CONDA_BUILD_VERSION=3.17.8
ARG CONDA_VERIFY_VERSION=3.1.1
ARG MINICONDA_URL=https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh
ARG NUMBA_VERSION=0.45.1
ARG NUMPY_VERSION=1.16.2
ARG RMM_VERSION=0.7.*
ARG PANDAS_VERSION=0.24.2
ARG PYARROW_VERSION=0.14.1
ARG ARROW_CPP_VERSION=0.14.1
ARG DOUBLE_CONVERSION_VERSION=3.1.5
ARG RAPIDJSON_VERSION=1.1.0
ARG FLATBUFFERS_VERSION=1.10.0
ARG BOOST_CPP_VERSION=1.70.0
ARG FASTAVRO_VERSION=0.22.3
ARG DLPACK_VERSION=0.2
ARG PYTHON_VERSION=3.6
ARG SCIPY_VERSION=1.2.1
ARG SKLEARN_VERSION=0.20.3
ARG TINI_URL=https://github.com/krallin/tini/releases/download/v0.18.0/tini

RUN yum install -y ${RAPIDS_SRC_DIR}/tmp/*.rpm \
    && yum upgrade -y \
    && yum install -y \
           bzip2 \
           curl \
           git \
           screen \
           vim \
           wget \
           which \
           clang \
           make

RUN curl -L ${TINI_URL} -o /usr/bin/tini \
    && chmod +x /usr/bin/tini

# Install gcc7 from prebuilt image
COPY --from=gpuci/builds-gcc7:10.0-devel-centos7 /usr/local/gcc7 /usr/local/gcc7

# Update environment to use new gcc7
ENV CC=${GCC7_DIR}/bin/gcc
ENV CXX=${GCC7_DIR}/bin/g++
ENV CUDAHOSTCXX=${GCC7_DIR}/bin/g++
ENV LD_LIBRARY_PATH=${GCC7_DIR}/lib64:$CONDA_PREFIX:$LD_LIBRARY_PATH
ENV PATH=$PATH:/conda/bin
ENV PATH=${GCC7_DIR}/bin:$PATH

# NOTE: Many/all of the package versions used below are defined in the
# "args" insertfile

# Install conda
## Build combined libgdf/pygdf conda env
RUN curl ${MINICONDA_URL} -o /miniconda.sh \
    && sh /miniconda.sh -b -p /conda \
    && rm -f /miniconda.sh \
    && echo "conda ${CONDA_VERSION}" >> /conda/conda-meta/pinned

ADD .condarc /conda/.condarc

# Add utlities to base env
RUN conda install -y \
          codecov \
          conda=${CONDA_VERSION} \
          conda-build=${CONDA_BUILD_VERSION} \
          conda-verify=${CONDA_VERIFY_VERSION}

# Create gdf conda env
RUN conda create --no-default-packages -n gdf \
          python=${PYTHON_VERSION} \
          anaconda-client \
          arrow-cpp=${ARROW_CPP_VERSION} \
          cffi=${CFFI_VERSION} \
          cmake=${CMAKE_VERSION} \
          cmake_setuptools \
          conda=${CONDA_VERSION} \
          conda-build=${CONDA_BUILD_VERSION} \
          conda-verify=${CONDA_VERIFY_VERSION} \
          cython=${CYTHON_VERSION} \
          flake8 \
          black \
          isort \
          make \
          numba>=${NUMBA_VERSION} \
          numpy=${NUMPY_VERSION} \
          pandas=${PANDAS_VERSION} \
          pyarrow=${PYARROW_VERSION} \
          double-conversion=${DOUBLE_CONVERSION_VERSION} \
          rapidjson=${RAPIDJSON_VERSION} \
          flatbuffers=${FLATBUFFERS_VERSION} \
          boost-cpp=${BOOST_CPP_VERSION} \
          fastavro=${FASTAVRO_VERSION} \
          dlpack=${DLPACK_VERSION} \
          pytest \
          pytest-cov \
          scikit-learn=${SKLEARN_VERSION} \
          scipy=${SCIPY_VERSION} \
          conda-forge::blas=1.1=openblas \
          libgcc-ng=${LIBGCC_NG_VERSION} \
          libgfortran-ng=${LIBGFORTRAN_NG_VERSION} \
          libstdcxx-ng=${LIBSTDCXX_NG_VERSION} \
    && conda clean -a \
    && chmod -R ugo+w /conda

# Enables "source activate conda"
SHELL ["/bin/bash", "-c"]

ENTRYPOINT [ "/usr/bin/tini", "--" ]
CMD [ "/bin/bash" ]
